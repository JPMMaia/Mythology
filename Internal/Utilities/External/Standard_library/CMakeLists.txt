find_path (standard_library_root "vector" PATHS ${CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES})

if (NOT standard_library_root)
    message (FATAL_ERROR "Could not find c++ standard library include path. Please check CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES.")
endif ()

add_library (Standard_library)

set_target_properties (Standard_library PROPERTIES LINKER_LANGUAGE CXX)

target_header (Standard_library "algorithm" "${standard_library_root}/algorithm")
target_header (Standard_library "array" "${standard_library_root}/array")
target_header (Standard_library "cassert" "${standard_library_root}/cassert")
target_header (Standard_library "cmath" "${standard_library_root}/cmath")
target_header (Standard_library "cstddef" "${standard_library_root}/cstddef")
target_header (Standard_library "cstdint" "${standard_library_root}/cstdint")
target_header (Standard_library "cstdlib" "${standard_library_root}/cstdlib")
target_header (Standard_library "cstring" "${standard_library_root}/cstring")
target_header (Standard_library "bitset" "${standard_library_root}/bitset")
target_header (Standard_library "deque" "${standard_library_root}/deque")
target_header (Standard_library "filesystem" "${standard_library_root}/filesystem")
target_header (Standard_library "fstream" "${standard_library_root}/fstream")
target_header (Standard_library "functional" "${standard_library_root}/functional")
target_header (Standard_library "future" "${standard_library_root}/future")
target_header (Standard_library "iosfwd" "${standard_library_root}/iosfwd")
target_header (Standard_library "iostream" "${standard_library_root}/iostream")
target_header (Standard_library "iterator" "${standard_library_root}/iterator")
target_header (Standard_library "limits" "${standard_library_root}/limits")
target_header (Standard_library "map" "${standard_library_root}/map")
target_header (Standard_library "memory" "${standard_library_root}/memory")
target_header (Standard_library "memory_resource" "${standard_library_root}/memory_resource")
target_header (Standard_library "mutex" "${standard_library_root}/mutex")
target_header (Standard_library "optional" "${standard_library_root}/optional")
target_header (Standard_library "ostream" "${standard_library_root}/ostream")
target_header (Standard_library "span" "${standard_library_root}/span")
target_header (Standard_library "sstream" "${standard_library_root}/sstream")
target_header (Standard_library "string" "${standard_library_root}/string")
target_header (Standard_library "string_view" "${standard_library_root}/string_view")
target_header (Standard_library "type_traits" "${standard_library_root}/type_traits")
target_header (Standard_library "unordered_map" "${standard_library_root}/unordered_map")
target_header (Standard_library "utility" "${standard_library_root}/utility")
target_header (Standard_library "vector" "${standard_library_root}/vector")
